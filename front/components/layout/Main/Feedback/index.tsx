import clsx from 'clsx';
import { useRouter } from 'next/router';
import React, { FC, useLayoutEffect, useState } from 'react';
import ScrollAnimation from 'react-animate-on-scroll';
import Slider from 'react-slick';

import CommonSmallText from '../../../common-components/common-small-text';
import CommonTitle from '../../../common-components/common-title';
import { en } from '../../../local/locales/en';
import { ru } from '../../../local/locales/ru';
import cn from './style.module.sass';

interface IScroll {
  children: any;
}

type obj = {
  id: number;
  date: string;
  header: string;
  text: string;
};

const useWindowSize = () => {
  React.useLayoutEffect = React.useEffect;
  const [size, setSize] = useState([0, 0]);
  useLayoutEffect(() => {
    function updateSize() {
      setSize([window.innerWidth, window.innerHeight]);
    }
    window.addEventListener('resize', updateSize);
    updateSize();
    return () => window.removeEventListener('resize', updateSize);
  }, []);
  return size;
};

const Reveal: FC<IScroll> = ({ children }) => (
  <ScrollAnimation
    animateIn="fadeIn"
    animateOut="fadeOut"
    duration={1}
    // offset={400}
  >
    {children}
  </ScrollAnimation>
);

const Feedback = () => {
  const [width, height] = useWindowSize();

  const settings = {
    dots: true,
    dotsClass: 'slick-dots feedback-slick-dots',
    arrows: false,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
  };

  const router = useRouter();
  const t = router.locale === 'en' ? en : ru;

  return (
    <section className={clsx(cn.feedback, 'md:pt-72px md:pb-64px pt-56px pb-64px')}>
      <div className="container mx-auto px-4">
        <CommonTitle properties="text-center">{t.feedbackTitle}</CommonTitle>

        {width > 1024 ? (
          <div className={clsx(cn.feedback__blocks)}>
            {obj.map(({ id, date, header, text }, index) => (
              <div key={`assets+${id}`} className={clsx(cn.feedback__block_external)}>
                <div className={clsx(cn.feedback__block_inner)}>
                  <img src="/img/feedback/feedback-icon.svg" alt="icon" className="mr-20px" />
                  <div className="font-inter text-15px text-gray-200 leading-21px mt-14px">
                    {date}
                  </div>
                  <CommonSmallText color="text-black-400" properties="mt-19px">
                    {header}
                  </CommonSmallText>
                  <CommonSmallText properties="mt-1">{text}</CommonSmallText>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <Slider {...settings} className={clsx(cn.feedback__blocks)}>
            {obj.map(({ id, date, header, text }, index) => (
              <div key={`assets+${id}`} className={clsx(cn.feedback__block_external)}>
                <div className={clsx(cn.feedback__block_inner)}>
                  <img src="/img/feedback/feedback-icon.svg" alt="icon" className="mr-20px" />
                  <div className="font-inter text-15px text-gray-200 leading-21px mt-14px">
                    {date}
                  </div>
                  <CommonSmallText color="text-black-400" properties="mt-19px">
                    {header}
                  </CommonSmallText>
                  <CommonSmallText properties="mt-1">{text}</CommonSmallText>
                </div>
              </div>
            ))}
          </Slider>
        )}
      </div>
    </section>
  );
};

export default Feedback;

const obj = [
  {
    id: 0,
    date: '02.02.2021',
    header: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–µ–ª–Ω–∏—Å',
    text: '–û—Ç–ª–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –º–Ω–µ –¥–Ω—è —Ö–≤–∞—Ç–∏–ª–æ —á—Ç–æ–±—ã —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è. üëç',
  },
  {
    id: 1,
    date: '13.02.2021',
    header: '–í–∞—Å—è –°–∞–Ω—å–∫–æ',
    text: '–ï—Å–ª–∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–≤–æ–ª—å–Ω–æ —Ç–∞–∫–∏ –∫—Ä—É—Ç–æ–µ. –ë—É–∫–≤–∞–ª—å–Ω–æ —Å–µ–≥–æ–¥–Ω—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏, –∞ —è —É–∂–µ –Ω–µ–º–Ω–æ–≥–æ –≤ –ø—Ä–∏–±—ã–ª–∏!??!',
  },
  {
    id: 2,
    date: '03.02.2021',
    header: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –®–∞–ø–ª—ã–∫–æ',
    text: '–•–æ—Ä–æ—à–∞—è, –ø—Ä–æ—Å—Ç–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –ì–ª–∞–≤–Ω—ã–π –ø–ª—é—Å - –¥–æ—Å—Ç—É–ø–Ω–æ –ª—é–±–æ–º—É, –¥–∞–∂–µ —Ä–µ–±–µ–Ω–∫—É. –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏, –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª. –µ—Å—Ç—å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –º–æ–∂–Ω–æ',
  },
  {
    id: 3,
    date: '04.02.2021',
    header: '–ê–ª–µ–∫—Å–µ–π –®–ª—ã–∫',
    text: '–£–¥–æ–±–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤. –ë—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–≤–µ—Å—Ç–∏/–≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –¥—Ä—É–≥–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã.',
  },
  {
    id: 4,
    date: '21.02.2021',
    header: 'Olga',
    text: '–•–æ—Ä–æ—à–∏–π –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å. –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.',
  },
  {
    id: 5,
    date: '12.01.2021',
    header: 'melanholidi',
    text: '–ü—Ä–æ—Ç—Ä–∏—Ç–µ –º–Ω–µ –≥–ª–∞–∑–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–¥–æ—á—ë—Ç—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –í—Å–µ –æ–∫.',
  },
];
